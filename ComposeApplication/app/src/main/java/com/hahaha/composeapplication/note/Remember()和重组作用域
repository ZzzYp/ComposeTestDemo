

重组作用域：Recompose Scope，
          * Compose 的编译器插件，会把可能需要重新调用的代码块包起来，
           * 在这个代码块执行结束以后，保存起来并标记当前执行的位置，
           * 当重新执行的条件达成以后（比如下面Text(text = name)中的name的值发生改变的时候），
           * 在标记的位置的代码块就会进行reCompose或者重组，
           * 具体来说，就是这个所在代码块会被重新拿出来执行一次并且它所依赖的变量值就是新的值了，就会组合出新的界面
           * 这就是重组作用域

Remember: remember{ mutableStateOf("zyp is niu") } 函数，
          它的作用就是第一次执行的时候，执行mutableStateOf并将结果返回，然后保存这个结果(即创建的MutableState对象)
          再次执行的时候，会直接返回保存的结果，起到了一个缓存的作用

带参数的remember函数：
         remember(key) { xxxxxxx }
         * 将key当作key，大括号内执行结果保存为value
         * 那么再次调用的时候，如果key不变就不会重新执行大括号内的代码，
         * 只有key发生了变化，才会再次执行大括号内的代码